# This overlay still uses cert-manager to generate a self-signed root CA and
# associated intermediate CA from which additional ClusterIssuers, Issuers, and
# Certificates can be generated and managed. To use this properly, a Secret
# named 'cluster-ca' containing certificates for an externally-managed CA must 
# be created with the following keys:
#
#   - tls.crt: Public keys of the full certificate chain for the CA signing
#              certificate in this order: issuer -> intermediate(s) -> root
#   - tls.key: Private key of the CA issuer certificate, unencrypted
#
# This approach mimics the cert-manager CA Issuer configuration, but any other
# cert-manager Issuer can be used instead (ACME, Vault, CyberArk, etc.) to
# manage a signing certificate for the ClusterIssuer cluster-issuer to use.
#
# https://cert-manager.io/docs/configuration/ca/

namespace: cert-manager

resources:
  - ../../base
  - custom-ca-hack.yaml
